//Você continuará utilizando o banco de dados erp do dia anterior. Nos exercícios 1 a 8 , você utilizará o mesmo pipeline . A ideia é começar com um pipeline pequeno e ir adicionando estágios à medida que você for evoluindo nos exercícios. Vamos lá?

// 1) Exercício 1 : Utilize uma combinação das expressões aritméticas e adicione um campo chamado idade à coleção clientes .

// 2) Exercício 2 : Utilizando o novo campo idade , conte quantos clientes têm entre 18 e 25 anos.

// Exercício 3 : Remova os estágios $count e $match do exercício anterior e adicione um estágio no pipeline que coloque as compras do cliente no campo compras .

// Exercício 4 : Selecione TODOS os clientes que compraram entre Junho de 2019 e Março de 2020 .

// Exercício 5 : Confira o número de documentos retornados pelo pipeline com o método itcount() . Até aqui, você deve ter 486 documentos sendo retornados.

// Exercício 6 : Ainda nesse pipeline , descubra os 5 estados com mais compras.

use("erp");
db.clientes.aggregate([
  {
    $addFields: {
      idade: { 
        $floor: { 
          $divide: [ 
            { $divide: [ { 
                $subtract: [ new Date(), "$dataNascimento" ] },
                86400000  
              ] 
            },
            365 
          ] 
        }
      }
    },
  },
  // { $match: { idade: { $gt: 18, $lt: 25 } } },
  // { $count: "clientesIdadeFiltrada" },
  {
    $lookup: {
      from: "vendas",
      localField: "clienteId",
      foreignField: "clienteId",
      as: "compras"
    }
  },
  { $match: { "compras.dataVenda": { $gt: ISODate("2019-06-01"), $lt: ISODate("2020-03-31") } } },
  { $unwind: "$compras" },
  { $group: {
      _id: "$endereco.uf",
      totaldeVendas: { $sum: 1 },
    },
  },
  { $sort: { totaldeVendas: -1 } },
  { $limit: 5 }
]);
















use("erp");
db.vendas.find();